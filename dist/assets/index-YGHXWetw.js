(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function t(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(o){if(o.ep)return;o.ep=!0;const r=t(o);fetch(o.href,r)}})();const f="modulepreload",g=function(s){return"/"+s},u={},y=function(e,t,i){let o=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const n=document.querySelector("meta[property=csp-nonce]"),a=(n==null?void 0:n.nonce)||(n==null?void 0:n.getAttribute("nonce"));o=Promise.allSettled(t.map(l=>{if(l=g(l),l in u)return;u[l]=!0;const c=l.endsWith(".css"),h=c?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${h}`))return;const d=document.createElement("link");if(d.rel=c?"stylesheet":f,c||(d.as="script"),d.crossOrigin="",d.href=l,a&&d.setAttribute("nonce",a),document.head.appendChild(d),c)return new Promise((m,p)=>{d.addEventListener("load",m),d.addEventListener("error",()=>p(new Error(`Unable to preload CSS for ${l}`)))})}))}function r(n){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=n,window.dispatchEvent(a),!a.defaultPrevented)throw n}return o.then(n=>{for(const a of n||[])a.status==="rejected"&&r(a.reason);return e().catch(r)})};class b{constructor(){this.loadingScreen=null}show(){const e=document.getElementById("game-screen"),t=document.getElementById("loading-screen");e&&(e.style.display="none"),t&&(t.classList.remove("fade-out","hidden"),t.classList.add("active"),t.style.display="flex",t.offsetHeight,t.classList.add("fade-in"),this.loadingScreen=t)}hide(){if(!this.loadingScreen)return;this.loadingScreen.classList.remove("fade-in"),this.loadingScreen.classList.add("fade-out");const e=this.getTransitionDuration(this.loadingScreen)||500;setTimeout(()=>{this.loadingScreen&&(this.loadingScreen.style.display="none",this.loadingScreen.classList.remove("active","fade-out"),this.loadingScreen.classList.add("hidden"))},e)}getTransitionDuration(e){try{const i=window.getComputedStyle(e).transitionDuration;if(i&&i!=="0s"){const o=parseFloat(i.replace("s",""));return Math.round(o*1e3)}}catch{}return null}}class w{constructor(){this.backgroundProgress={total:4,completed:0,steps:["Assets","Systems","Game Core","Finalization"]}}show(){const e=document.createElement("div");e.id="background-progress-indicator",e.innerHTML=`
            <div class="progress-content">
                <div class="progress-text">Initializing background systems...</div>
                <div class="progress-bar">
                    <div class="progress-fill"></div>
                </div>
                <div class="progress-step">Step 0 of 4</div>
            </div>
        `,e.style.cssText=`
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 12px 16px;
            border-radius: 8px;
            font-family: Arial, sans-serif;
            font-size: 12px;
            z-index: 10000;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.2);
            min-width: 280px;
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.3s ease;
        `;const t=e.querySelector(".progress-bar");t&&(t.style.cssText=`
                width: 100%;
                height: 6px;
                background: rgba(255, 255, 255, 0.2);
                border-radius: 3px;
                margin: 8px 0 4px 0;
                overflow: hidden;
            `);const i=e.querySelector(".progress-fill");i&&(i.style.cssText=`
                height: 100%;
                background: linear-gradient(90deg, #4CAF50, #8BC34A);
                width: 0%;
                transition: width 0.5s ease;
                border-radius: 3px;
            `);const o=e.querySelector(".progress-text");o&&(o.style.cssText=`
                margin-bottom: 4px;
                font-weight: 500;
            `);const r=e.querySelector(".progress-step");r&&(r.style.cssText=`
                font-size: 10px;
                opacity: 0.7;
                margin-top: 2px;
            `),document.body.appendChild(e),requestAnimationFrame(()=>{e.style.opacity="1",e.style.transform="translateY(0)"})}update(e,t){const i=document.getElementById("background-progress-indicator");if(!i)return;const o=i.querySelector(".progress-text"),r=i.querySelector(".progress-fill"),n=i.querySelector(".progress-step");if(o&&(o.textContent=e),r)if(t===-1)r.style.background="linear-gradient(90deg, #f44336, #ff5722)",r.style.width="100%";else{const a=Math.max(0,Math.min(100,t/this.backgroundProgress.total*100));r.style.width=`${a}%`,r.style.background="linear-gradient(90deg, #4CAF50, #8BC34A)"}n&&(t===-1?n.textContent="Error occurred":n.textContent=`Step ${t} of ${this.backgroundProgress.total}`)}hide(){const e=document.getElementById("background-progress-indicator");if(!e)return;e.style.opacity="0",e.style.transform="translateY(20px)";const t=this.getTransitionDuration(e)||300;setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},t)}getTransitionDuration(e){try{const i=window.getComputedStyle(e).transitionDuration;if(i&&i!=="0s"){const o=parseFloat(i.replace("s",""));return Math.round(o*1e3)}}catch{}return null}}class v{loadCriticalAssets(){return Promise.resolve()}loadScript(e){return new Promise((t,i)=>{const o=document.createElement("script");o.src=e,o.async=!0,o.onload=()=>t(),o.onerror=r=>i(r),document.head.appendChild(o)})}loadCSS(e){return new Promise((t,i)=>{const o=document.createElement("link");o.rel="stylesheet",o.href=e,o.onload=()=>t(),o.onerror=r=>i(r),document.head.appendChild(o)})}}class x{showError(e){var r,n;const t=document.createElement("div");t.className="error-notification",t.innerHTML=`
            <div class="error-content">
                <strong>Initialization Error</strong>
                <p>${e&&e.message?e.message:"An error occurred"}</p>
                <button id="error-reload-btn">Reload</button>
                <button id="error-dismiss-btn">Dismiss</button>
            </div>
        `,t.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(244, 67, 54, 0.9);
            color: white;
            padding: 16px;
            border-radius: 8px;
            font-family: Arial, sans-serif;
            font-size: 14px;
            z-index: 10001;
            max-width: 300px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        `,document.body.appendChild(t);const i=()=>window.location.reload(),o=()=>t.remove();(r=t.querySelector("#error-reload-btn"))==null||r.addEventListener("click",i),(n=t.querySelector("#error-dismiss-btn"))==null||n.addEventListener("click",o),setTimeout(()=>{t.parentNode&&t.remove()},1e4)}showCriticalError(e){console.error("[ErrorNotificationManager] Critical error - cannot show menu:",e),document.body.innerHTML=`
            <div style="display: flex; align-items: center; justify-content: center; height: 100vh; 
                        background: linear-gradient(135deg, #1a1a2e, #16213e); color: #00d4ff; 
                        font-family: Arial, sans-serif; text-align: center;">
                <div style="max-width: 600px; padding: 40px;">
                    <h1 style="font-size: 2.5rem; margin-bottom: 20px; text-shadow: 0 0 10px rgba(0, 212, 255, 0.5);">
                        Dharmapala Shield
                    </h1>
                    <div style="background: rgba(255, 255, 255, 0.1); padding: 20px; border-radius: 10px; margin-bottom: 20px;">
                        <h2 style="color: #ff6b6b; margin-bottom: 10px;">Critical Startup Error</h2>
                        <p style="font-size: 1.1rem; margin-bottom: 15px;">
                            ${e.message}
                        </p>
                        <p style="font-size: 0.9rem; opacity: 0.8;">
                            The game encountered a critical error during initialization and cannot continue.
                        </p>
                    </div>
                    <div style="display: flex; gap: 15px; justify-content: center; flex-wrap: wrap;">
                        <button onclick="location.reload()" 
                                style="padding: 12px 24px; margin: 5px; background: #00d4ff; 
                                       color: #1a1a2e; border: none; border-radius: 8px; cursor: pointer;
                                       font-size: 1rem; font-weight: 500; transition: all 0.2s ease;
                                       box-shadow: 0 4px 15px rgba(0, 212, 255, 0.3);"
                                onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 6px 20px rgba(0, 212, 255, 0.4)';"
                                onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='0 4px 15px rgba(0, 212, 255, 0.3)';">
                            🔄 Reload Game
                        </button>
                        <button onclick="window.open('https://github.com/zekusmaximus/Dharmapala-Shield1/issues', '_blank')" 
                                style="padding: 12px 24px; margin: 5px; background: rgba(255, 255, 255, 0.1); 
                                       color: #00d4ff; border: 2px solid #00d4ff; border-radius: 8px; cursor: pointer;
                                       font-size: 1rem; font-weight: 500; transition: all 0.2s ease;"
                                onmouseover="this.style.background='rgba(0, 212, 255, 0.1)'"
                                onmouseout="this.style.background='rgba(255, 255, 255, 0.1)'">
                            🐛 Report Issue
                        </button>
                    </div>
                    <div style="margin-top: 30px; padding: 15px; background: rgba(255, 255, 255, 0.05); border-radius: 8px;">
                        <h3 style="margin-bottom: 10px; font-size: 1.1rem;">Troubleshooting Tips:</h3>
                        <ul style="text-align: left; font-size: 0.9rem; opacity: 0.9;">
                            <li>Try refreshing the page (Ctrl+F5 or Cmd+Shift+R)</li>
                            <li>Clear your browser cache and cookies</li>
                            <li>Disable browser extensions temporarily</li>
                            <li>Try using an incognito/private browsing window</li>
                            <li>Check your internet connection</li>
                        </ul>
                    </div>
                    <p style="margin-top: 20px; font-size: 0.8rem; opacity: 0.6;">
                        Error ID: ${Date.now().toString(36)}-${Math.random().toString(36).substr(2,9)}
                    </p>
                </div>
            </div>
        `}showWarningNotification(e,t=5e3){const i=document.createElement("div");i.className="warning-notification",i.id=`warning-notification-${++this.notificationCount}`,i.innerHTML=`
            <div class="warning-content">
                <strong>⚠️ Warning</strong>
                <p>${e}</p>
                <button onclick="this.parentElement.parentElement.remove()">Dismiss</button>
            </div>
        `,i.style.cssText=`
            position: fixed;
            top: ${20+(this.notificationCount-1)*80}px;
            right: 20px;
            background: rgba(255, 152, 0, 0.9);
            color: white;
            padding: 16px;
            border-radius: 8px;
            font-family: Arial, sans-serif;
            font-size: 14px;
            z-index: ${10001+this.notificationCount};
            max-width: 300px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            opacity: 0;
            transform: translateX(100%);
            transition: all 0.3s ease;
        `;const o=i.querySelector("button");o&&(o.style.cssText=`
                margin-top: 5px;
                padding: 5px 10px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 12px;
                background: rgba(255, 255, 255, 0.2);
                color: white;
                transition: background 0.2s ease;
            `),document.body.appendChild(i),requestAnimationFrame(()=>{i.style.opacity="1",i.style.transform="translateX(0)"}),setTimeout(()=>{i.parentNode&&(i.style.opacity="0",i.style.transform="translateX(100%)",setTimeout(()=>{i.parentNode&&i.remove()},300))},t),console.log("[ErrorNotificationManager] Warning notification displayed:",e)}showSuccessNotification(e,t=3e3){const i=document.createElement("div");i.className="success-notification",i.id=`success-notification-${++this.notificationCount}`,i.innerHTML=`
            <div class="success-content">
                <strong>✅ Success</strong>
                <p>${e}</p>
            </div>
        `,i.style.cssText=`
            position: fixed;
            top: ${20+(this.notificationCount-1)*80}px;
            right: 20px;
            background: rgba(76, 175, 80, 0.9);
            color: white;
            padding: 16px;
            border-radius: 8px;
            font-family: Arial, sans-serif;
            font-size: 14px;
            z-index: ${10001+this.notificationCount};
            max-width: 300px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            opacity: 0;
            transform: translateX(100%);
            transition: all 0.3s ease;
        `,document.body.appendChild(i),requestAnimationFrame(()=>{i.style.opacity="1",i.style.transform="translateX(0)"}),setTimeout(()=>{i.parentNode&&(i.style.opacity="0",i.style.transform="translateX(100%)",setTimeout(()=>{i.parentNode&&i.remove()},300))},t),console.log("[ErrorNotificationManager] Success notification displayed:",e)}clearAllNotifications(){document.querySelectorAll(".error-notification, .warning-notification, .success-notification").forEach(t=>{t.style.opacity="0",t.style.transform="translateX(100%)",setTimeout(()=>{t.parentNode&&t.remove()},300)}),this.notificationCount=0,console.log("[ErrorNotificationManager] All notifications cleared")}}class S{constructor(e){this.canvas=e,this.x=0,this.y=0,this.zoom=1,this.targetZoom=1,this.minZoom=.5,this.maxZoom=3,this.zoomSpeed=.1,this.width=e?e.width:800,this.height=e?e.height:600,this.bounds={left:-1/0,top:-1/0,right:1/0,bottom:1/0},this.following=null,this.followSpeed=.1,this.followOffset={x:0,y:0},this.shaking=!1,this.shakeIntensity=0,this.shakeDuration=0,this.shakeDecay=.9,this.shakeOffset={x:0,y:0},this.setupResizeHandler()}setupResizeHandler(){typeof window<"u"&&window.addEventListener("resize",()=>this.handleResize())}handleResize(){this.canvas&&this.updateDimensions()}updateDimensions(){this.canvas&&(this.width=this.canvas.width,this.height=this.canvas.height)}setCanvas(e){this.canvas=e,this.updateDimensions()}setPosition(e,t){this.x=e,this.y=t,this.constrainToBounds()}move(e,t){this.x+=e,this.y+=t,this.constrainToBounds()}setZoom(e){this.targetZoom=Utils.math.clamp(e,this.minZoom,this.maxZoom)}zoomIn(e=1.2){this.setZoom(this.targetZoom*e)}zoomOut(e=.8){this.setZoom(this.targetZoom*e)}zoomToPoint(e,t,i){const o=this.screenToWorldX(e),r=this.screenToWorldY(t),n=this.zoom;this.setZoom(this.zoom*i);const l=this.targetZoom/n;this.x=o-(o-this.x)*l,this.y=r-(r-this.y)*l,this.constrainToBounds()}setBounds(e,t,i,o){this.bounds.left=e,this.bounds.top=t,this.bounds.right=i,this.bounds.bottom=o,this.constrainToBounds()}constrainToBounds(){const e=this.width/2/this.zoom,t=this.height/2/this.zoom;if(this.bounds.left!==-1/0&&this.bounds.right!==1/0){const i=this.bounds.left+e,o=this.bounds.right-e;this.x=Utils.math.clamp(this.x,i,o)}if(this.bounds.top!==-1/0&&this.bounds.bottom!==1/0){const i=this.bounds.top+t,o=this.bounds.bottom-t;this.y=Utils.math.clamp(this.y,i,o)}}follow(e,t=.1,i=0,o=0){this.following=e,this.followSpeed=t,this.followOffset.x=i,this.followOffset.y=o}stopFollowing(){this.following=null}shake(e,t){this.shaking=!0,this.shakeIntensity=e,this.shakeDuration=t}update(e){this.updateZoom(e),this.updateFollowing(e),this.updateShake(e)}updateZoom(e){if(Math.abs(this.zoom-this.targetZoom)>.01){const t=this.targetZoom-this.zoom;this.zoom+=t*this.zoomSpeed,Math.abs(t)<.01&&(this.zoom=this.targetZoom)}}updateFollowing(e){if(!this.following)return;const t=this.following.x+this.followOffset.x,i=this.following.y+this.followOffset.y,o=t-this.x,r=i-this.y;this.x+=o*this.followSpeed,this.y+=r*this.followSpeed,this.constrainToBounds()}updateShake(e){if(!this.shaking)return;if(this.shakeDuration-=e,this.shakeDuration<=0){this.shaking=!1,this.shakeOffset.x=0,this.shakeOffset.y=0;return}const t=this.shakeIntensity*(this.shakeDuration/1e3);this.shakeOffset.x=(Math.random()-.5)*t*2,this.shakeOffset.y=(Math.random()-.5)*t*2}applyTransform(e){e.save();const t=this.width/2,i=this.height/2;return e.translate(t,i),e.scale(this.zoom,this.zoom),e.translate(-this.x+this.shakeOffset.x,-this.y+this.shakeOffset.y),()=>e.restore()}screenToWorldX(e){const t=this.width/2;return(e-t)/this.zoom+this.x}screenToWorldY(e){const t=this.height/2;return(e-t)/this.zoom+this.y}screenToWorld(e,t){return{x:this.screenToWorldX(e),y:this.screenToWorldY(t)}}worldToScreenX(e){const t=this.width/2;return(e-this.x)*this.zoom+t}worldToScreenY(e){const t=this.height/2;return(e-this.y)*this.zoom+t}worldToScreen(e,t){return{x:this.worldToScreenX(e),y:this.worldToScreenY(t)}}isPointVisible(e,t,i=0){const o=this.worldToScreen(e,t);return o.x>=-i&&o.x<=this.width+i&&o.y>=-i&&o.y<=this.height+i}isRectVisible(e,t,i,o,r=0){const n=this.worldToScreenX(e),a=this.worldToScreenX(e+i),l=this.worldToScreenY(t),c=this.worldToScreenY(t+o);return a>=-r&&n<=this.width+r&&c>=-r&&l<=this.height+r}getVisibleBounds(e=0){const t=this.screenToWorld(-e,-e),i=this.screenToWorld(this.width+e,this.height+e);return{left:t.x,top:t.y,right:i.x,bottom:i.y,width:i.x-t.x,height:i.y-t.y}}centerOn(e,t){this.setPosition(e,t)}fitToRect(e,t,i,o,r=50){const n=i+r*2,a=o+r*2,l=this.width/n,c=this.height/a,h=Math.min(l,c);this.setZoom(h),this.centerOn(e+i/2,t+o/2)}reset(){this.x=0,this.y=0,this.zoom=1,this.targetZoom=1,this.shaking=!1,this.shakeOffset.x=0,this.shakeOffset.y=0,this.following=null}getState(){return{x:this.x,y:this.y,zoom:this.zoom,targetZoom:this.targetZoom}}setState(e){this.x=e.x||0,this.y=e.y||0,this.zoom=e.zoom||1,this.targetZoom=e.targetZoom||this.zoom,this.constrainToBounds()}}class _{constructor(){this.loadingScreen=null,this.game=null,this.screenManager=null,this.initialized=!1,this.progressIndicator=null,this.backgroundProgress={total:4,completed:0,steps:["Assets","Systems","Game Core","Finalization"]},this.devicePerformance=this.assessDevicePerformance(),this.loadingScreenManager=new b,this.progressIndicatorManager=new w,this.assetLoader=new v,this.errorNotificationManager=new x}applyConfigurationOverrides(){}assessDevicePerformance(){const e={score:1,factors:{}};try{if(navigator.hardwareConcurrency){const t=navigator.hardwareConcurrency;e.factors.cores=t,t>=8?e.score+=.3:t>=4?e.score+=.1:t<=2&&(e.score-=.2)}if(navigator.deviceMemory){const t=navigator.deviceMemory;e.factors.memory=t,t>=8?e.score+=.2:t>=4?e.score+=.1:t<=2&&(e.score-=.3)}return e}catch{return e}}async init(){this.showLoadingScreen();try{typeof window.ScreenManager<"u"&&(this.screenManager=new window.ScreenManager),this.ensureMenuVisible("Normal initialization"),this.showBackgroundProgressIndicator(),await this.initializeBackgroundSystems(),this.hideBackgroundProgressIndicator()}catch(e){console.error("[GameBootstrap] Initialization failed:",e),this.showErrorNotification(e),this.ensureMenuVisible("Error initialization path",e)}finally{this.hideLoadingScreen()}}async initializeBackgroundSystems(){try{this.updateBackgroundProgress("Loading critical assets...",1),await this.preloadCriticalAssets(),this.updateBackgroundProgress("Initializing game systems...",2),await this.initializeGame(),this.updateBackgroundProgress("Finalizing systems...",3),await new Promise(e=>setTimeout(e,200)),this.updateBackgroundProgress("Ready!",4)}catch(e){throw this.updateBackgroundProgress(`Failed: ${e.message}`,-1),this.showErrorNotification(e),e}}ensureMenuVisible(){this.hideLoadingScreen();const e=this.screenManager||this.game&&this.game.screenManager;if(e&&typeof e.showScreen=="function")try{e.showScreen("main-menu");return}catch{}const t=document.getElementById("loading-screen");t&&(t.style.display="none",t.classList.remove("active"));const i=document.getElementById("main-menu-screen");i&&(i.style.display="flex",i.classList.add("active"))}showLoadingScreen(){var e,t;(t=(e=this.loadingScreenManager).show)==null||t.call(e)}hideLoadingScreen(){var e,t;(t=(e=this.loadingScreenManager).hide)==null||t.call(e)}showBackgroundProgressIndicator(){var e,t;(t=(e=this.progressIndicatorManager).show)==null||t.call(e)}hideBackgroundProgressIndicator(){var e,t;(t=(e=this.progressIndicatorManager).hide)==null||t.call(e)}updateBackgroundProgress(e,t){var i,o;(o=(i=this.progressIndicatorManager).update)==null||o.call(i,e,t,this.backgroundProgress.total)}showErrorNotification(e){var t,i;(i=(t=this.errorNotificationManager).showError)==null||i.call(t,e)}async preloadCriticalAssets(){return this.assetLoader.loadCriticalAssets()}loadScript(e){return this.assetLoader.loadScript(e)}loadStylesheet(e){return this.assetLoader.loadCSS(e)}async initializeGame(){const{default:e}=await y(async()=>{const{default:o}=await import("./game-R01ocdnM.js");return{default:o}},[]),t=document.getElementById("gameCanvas");if(!t)throw new Error("Game canvas not found in DOM");if(this.setupResponsiveCanvas(t),this.game=new e(t),window.camera?window.camera&&typeof window.camera.setCanvas=="function"&&window.camera.setCanvas(t):window.camera=new S(t),this.screenManager&&(this.game.screenManager=this.screenManager),this.setupCanvasResizeHandler(t),await this.game.initialize()===!1)throw new Error("Game initialization returned false");this.initialized=!0}setupResponsiveCanvas(e){try{let t=800,i=600;typeof window.CONFIG<"u"&&window.CONFIG.CANVAS_WIDTH&&window.CONFIG.CANVAS_HEIGHT&&(typeof window.CONFIG.CANVAS_WIDTH=="number"&&window.CONFIG.CANVAS_WIDTH>0&&window.CONFIG.CANVAS_WIDTH<=4096&&(t=window.CONFIG.CANVAS_WIDTH),typeof window.CONFIG.CANVAS_HEIGHT=="number"&&window.CONFIG.CANVAS_HEIGHT>0&&window.CONFIG.CANVAS_HEIGHT<=4096&&(i=window.CONFIG.CANVAS_HEIGHT));const o=e.parentElement;if(o){const r=o.clientWidth,n=o.clientHeight,a=t/i,l=r/n;r>0&&n>0&&(l>a?(i=Math.min(i,n),t=i*a):(t=Math.min(t,r),i=t/a))}e.width=Math.floor(t),e.height=Math.floor(i),e.style.width=t+"px",e.style.height=i+"px"}catch{}}setupCanvasResizeHandler(e){window.addEventListener("resize",()=>{this.setupResponsiveCanvas(e),this.game&&typeof this.game.handleResize=="function"&&this.game.handleResize()})}}const E={CANVAS_WIDTH:window.innerWidth>768?1200:window.innerWidth,CANVAS_HEIGHT:window.innerWidth>768?800:window.innerHeight*.6,GRID_SIZE:window.innerWidth>768?40:30,get GRID_COLS(){return Math.floor(this.CANVAS_WIDTH/this.GRID_SIZE)},get GRID_ROWS(){return Math.floor(this.CANVAS_HEIGHT/this.GRID_SIZE)},IS_MOBILE:window.innerWidth<=768,IS_TOUCH:"ontouchstart"in window||navigator.maxTouchPoints>0,INITIAL_DHARMA:100,INITIAL_BANDWIDTH:50,INITIAL_ANONYMITY:75,DEFENSE_TYPES:{firewall:{name:"Firewall Fortress",cost:25,damage:15,range:200,fireRate:1500,color:"#ff6b6b",description:"Basic blocking defense with Buddhist prayer flag aesthetics",abilities:["armor_piercing_upgrade","explosive_shots_upgrade"]},encryption:{name:"Encryption Monastery",cost:40,damage:25,range:250,fireRate:1200,color:"#4ecdc4",description:"Scrambles data packets with rotating cipher algorithms",abilities:["slow_field","multi_shot"]},decoy:{name:"Decoy Temple",cost:30,damage:0,range:300,fireRate:0,color:"#45b7d1",description:"False targets that misdirect attacks",abilities:["confusion","redirect","path_manipulation"]},mirror:{name:"Mirror Server",cost:50,damage:30,range:220,fireRate:1800,color:"#f9ca24",description:"Reflects attacks back to sender using reflection meditation",abilities:["reflection_boost","perfect_reflection","homing_shots"]},anonymity:{name:"Anonymity Shroud",cost:35,damage:0,range:350,fireRate:0,color:"#6c5ce7",description:"Cloaks network traffic from surveillance",abilities:["stealth_field","misdirection","invisibility_aura"]},distributor:{name:"Dharma Distributor",cost:60,damage:0,range:400,fireRate:0,color:"#ffd700",description:"Boosts delivery speed and success rates",abilities:["boost_aura","resource_generation","network_acceleration"]}},ENEMY_TYPES:{scriptKiddie:{name:"Script Kiddie",health:20,speed:80,reward:5,color:"#ff7675",size:15,armor:0,abilities:["erratic_movement"],description:"Fast but weak attackers with unpredictable movement patterns"},federalAgent:{name:"Federal Agent",health:80,speed:60,reward:15,color:"#2d3436",size:20,armor:2,abilities:["persistent_pathfinding","armor"],description:"Heavily armored agents that find alternate routes when blocked"},corporateSaboteur:{name:"Corporate Saboteur",health:50,speed:70,reward:10,color:"#636e72",size:18,armor:1,abilities:["stealth_mode"],description:"Can become invisible and move faster temporarily"},aiSurveillance:{name:"AI Surveillance",health:60,speed:65,reward:12,color:"#74b9ff",size:16,armor:0,abilities:["scanning_beam","mark_targets"],description:"Marks defenses for increased damage and has scanning capabilities"},raidTeam:{name:"Raid Team",health:200,speed:45,reward:50,color:"#e17055",size:30,armor:5,abilities:["boss_mechanics","spawn_minions","emp_burst","teleport"],description:"Powerful boss enemy with multiple phases and special abilities",isBoss:!0},quantumHacker:{name:"Quantum Hacker",health:100,speed:90,reward:25,color:"#00b894",size:18,armor:1,abilities:["phase_shift","quantum_tunneling"],description:"Advanced hacker that can phase through defenses temporarily"},corruptedMonk:{name:"Corrupted Monk",health:120,speed:55,reward:30,color:"#6c5ce7",size:22,armor:3,abilities:["healing_aura","corruption_spread"],description:"Corrupted Buddhist monk that heals nearby enemies and spreads corruption"},megaCorp:{name:"MegaCorp Titan",health:400,speed:35,reward:100,color:"#fd79a8",size:40,armor:10,abilities:["boss_mechanics","deploy_drones","corporate_takeover","shield_regeneration"],description:"Massive corporate entity with drone swarms and regenerative capabilities",isBoss:!0}},WAVES:[{enemies:[{type:"scriptKiddie",count:5,interval:1e3}]},{enemies:[{type:"scriptKiddie",count:8,interval:800},{type:"federalAgent",count:2,interval:2e3}]},{enemies:[{type:"scriptKiddie",count:10,interval:600},{type:"corporateSaboteur",count:3,interval:1500}]},{enemies:[{type:"scriptKiddie",count:12,interval:500},{type:"federalAgent",count:4,interval:1800},{type:"aiSurveillance",count:2,interval:2500}]},{enemies:[{type:"scriptKiddie",count:15,interval:400},{type:"corporateSaboteur",count:5,interval:1200},{type:"raidTeam",count:1,interval:5e3}]},{enemies:[{type:"scriptKiddie",count:20,interval:300},{type:"federalAgent",count:6,interval:1500},{type:"aiSurveillance",count:4,interval:2e3}]},{enemies:[{type:"scriptKiddie",count:25,interval:250},{type:"corporateSaboteur",count:8,interval:1e3},{type:"raidTeam",count:2,interval:4e3}]},{enemies:[{type:"scriptKiddie",count:30,interval:200},{type:"federalAgent",count:10,interval:1200},{type:"aiSurveillance",count:6,interval:1800},{type:"raidTeam",count:2,interval:3500}]},{enemies:[{type:"scriptKiddie",count:35,interval:150},{type:"corporateSaboteur",count:12,interval:800},{type:"aiSurveillance",count:8,interval:1500},{type:"raidTeam",count:3,interval:3e3}]},{enemies:[{type:"scriptKiddie",count:40,interval:100},{type:"federalAgent",count:15,interval:1e3},{type:"corporateSaboteur",count:15,interval:600},{type:"aiSurveillance",count:10,interval:1200},{type:"raidTeam",count:5,interval:2500}]},{enemies:[{type:"scriptKiddie",count:30,interval:200},{type:"quantumHacker",count:5,interval:2e3},{type:"aiSurveillance",count:8,interval:1500},{type:"raidTeam",count:2,interval:4e3}]},{enemies:[{type:"federalAgent",count:20,interval:800},{type:"corporateSaboteur",count:10,interval:1200},{type:"quantumHacker",count:8,interval:1800},{type:"corruptedMonk",count:3,interval:3e3}]},{enemies:[{type:"scriptKiddie",count:50,interval:150},{type:"quantumHacker",count:12,interval:1e3},{type:"corruptedMonk",count:5,interval:2500},{type:"raidTeam",count:3,interval:3500}]},{enemies:[{type:"federalAgent",count:25,interval:600},{type:"aiSurveillance",count:15,interval:1e3},{type:"quantumHacker",count:10,interval:1500},{type:"corruptedMonk",count:8,interval:2e3},{type:"megaCorp",count:1,interval:1e4}]},{enemies:[{type:"scriptKiddie",count:100,interval:100},{type:"federalAgent",count:30,interval:400},{type:"corporateSaboteur",count:25,interval:600},{type:"quantumHacker",count:20,interval:800},{type:"corruptedMonk",count:10,interval:1500},{type:"raidTeam",count:5,interval:2e3},{type:"megaCorp",count:2,interval:15e3}]}],MAX_WAVES:10,PATH_POINTS:[{x:0,y:400},{x:200,y:400},{x:200,y:200},{x:400,y:200},{x:400,y:600},{x:600,y:600},{x:600,y:300},{x:800,y:300},{x:800,y:500},{x:1e3,y:500},{x:1e3,y:400},{x:1200,y:400}],AUDIO:{masterVolume:.7,musicVolume:.5,sfxVolume:.8},GRAPHICS:{quality:"medium",particleEffects:!0,reducedMotion:!1},ACCESSIBILITY:{colorblindMode:!1,subtitles:!1,highContrast:!1,reducedMotion:!1,screenReaderEnabled:!1,keyboardNavigation:!0,announceAchievements:!0,toastDuration:4e3,enhancedFocus:!0},validateUpgradeTreesStructure(){console.log("[CONFIG] Validating UPGRADE_TREES structure...");try{if(!this.UPGRADE_TREES||typeof this.UPGRADE_TREES!="object")return console.error("[CONFIG] UPGRADE_TREES is not a valid object"),!1;const s=["firewall","encryption","decoy","mirror","anonymity","distributor"];let e=[],t=[];return s.forEach(i=>{const o=this.UPGRADE_TREES[i];if(!o){t.push(`Missing upgrade tree for defense type: ${i}`);return}if(typeof o!="object"){e.push(`Invalid upgrade tree structure for ${i}`);return}for(let r=2;r<=5;r++){const n=o[r];if(!n){t.push(`Missing upgrade for ${i} level ${r}`);continue}const a=this.validateSingleUpgrade(n,i,r);e.push(...a.errors),t.push(...a.warnings)}}),e.length>0?(console.error("[CONFIG] UPGRADE_TREES validation errors:",e),!1):(t.length>0&&console.warn("[CONFIG] UPGRADE_TREES validation warnings:",t),console.log("[CONFIG] UPGRADE_TREES structure validation completed successfully"),!0)}catch(s){return console.error("[CONFIG] Critical error during UPGRADE_TREES validation:",s),!1}},validateSingleUpgrade(s,e,t){const i=[],o=[];if(s.description&&typeof s.description!="string"&&i.push(`Invalid description type for ${e} level ${t}`),s.modifiers)if(typeof s.modifiers!="object")i.push(`Invalid modifiers structure for ${e} level ${t}`);else{const r=["damage","range","fireRate","size"];Object.entries(s.modifiers).forEach(([n,a])=>{r.includes(n)||o.push(`Unknown modifier '${n}' for ${e} level ${t}`),(typeof a!="number"||a<=0)&&i.push(`Invalid modifier value for '${n}' in ${e} level ${t}: ${a}`)})}if(s.abilities)if(!Array.isArray(s.abilities))i.push(`Abilities must be an array for ${e} level ${t}`);else{const r=["armor_piercing","explosive_rounds","improved_targeting","rapid_fire","slow_field","multi_shot","chain_lightning","quantum_bypass","viral_spread","confusion","redirect","holographic_decoy","mass_confusion","phantom_army","reflection_boost","omni_reflection","perfect_reflection","truth_revelation","stealth_field","misdirection","invisibility_cloak","shadow_network","boost_aura","resource_generation","dharma_blessing","network_amplification","fortress_mode","wisdom_aura","enlightenment_burst","advanced_cloak","perfect_anonymity","network_boost","mass_boost","dharma_fountain"];s.abilities.forEach(n=>{typeof n!="string"?i.push(`Invalid ability type in ${e} level ${t}: ${typeof n}`):r.includes(n)||o.push(`Unknown ability '${n}' for ${e} level ${t}`)})}return s.choices&&(Array.isArray(s.choices)?s.choices.forEach((r,n)=>{const a=this.validateUpgradeChoice(r,e,t,n);i.push(...a.errors),o.push(...a.warnings)}):i.push(`Choices must be an array for ${e} level ${t}`)),{errors:i,warnings:o}},validateUpgradeChoice(s,e,t,i){const o=[],r=[];if(!s||typeof s!="object")return o.push(`Invalid choice structure for ${e} level ${t} choice ${i}`),{errors:o,warnings:r};if(s.name&&typeof s.name!="string"&&o.push(`Invalid choice name type for ${e} level ${t} choice ${i}`),s.description&&typeof s.description!="string"&&o.push(`Invalid choice description type for ${e} level ${t} choice ${i}`),s.modifiers)if(typeof s.modifiers!="object")o.push(`Invalid choice modifiers for ${e} level ${t} choice ${i}`);else{const n=["damage","range","fireRate","size"];Object.entries(s.modifiers).forEach(([a,l])=>{n.includes(a)||r.push(`Unknown choice modifier '${a}' for ${e} level ${t} choice ${i}`),(typeof l!="number"||l<=0)&&o.push(`Invalid choice modifier value for '${a}' in ${e} level ${t} choice ${i}: ${l}`)})}return s.abilities&&(Array.isArray(s.abilities)||o.push(`Choice abilities must be an array for ${e} level ${t} choice ${i}`)),{errors:o,warnings:r}},UPGRADE_TREES:{firewall:{2:{description:"Enhanced targeting system",modifiers:{damage:1.2,range:1.1},abilities:["improved_targeting"]},3:{description:"Armor piercing rounds",modifiers:{damage:1.3},abilities:["armor_piercing"],choices:[{name:"Explosive Rounds",description:"Area damage on impact",abilities:["explosive_rounds"]},{name:"Rapid Fire",description:"Increased fire rate",modifiers:{fireRate:.7}}]},4:{description:"Advanced targeting computer",modifiers:{range:1.3,damage:1.2}},5:{description:"Fortress of Dharma",modifiers:{damage:2,range:1.5,size:1.5},abilities:["fortress_mode","dharma_blessing"]}},encryption:{2:{description:"Slow field projection",abilities:["slow_field"],modifiers:{range:1.2}},3:{description:"Multi-target encryption",abilities:["multi_shot"],modifiers:{damage:1.1}},4:{description:"Advanced cipher algorithms",modifiers:{damage:1.4,fireRate:.8},choices:[{name:"Quantum Encryption",description:"Chance to bypass all armor",abilities:["quantum_bypass"]},{name:"Viral Encryption",description:"Spreads to nearby enemies",abilities:["viral_spread"]}]},5:{description:"Monastery of Infinite Wisdom",modifiers:{damage:1.8,range:1.4},abilities:["wisdom_aura","enlightenment_burst"]}},decoy:{2:{description:"Confusion field",abilities:["confusion"],modifiers:{range:1.3}},3:{description:"Enemy redirection",abilities:["redirect"],modifiers:{range:1.2}},4:{description:"Advanced holographic projection",abilities:["holographic_decoy"],modifiers:{range:1.5}},5:{description:"Temple of Illusions",abilities:["mass_confusion","phantom_army"],modifiers:{range:2}}},mirror:{2:{description:"Reflection amplification",modifiers:{damage:1.3}},3:{description:"Enhanced reflection matrix",abilities:["reflection_boost"],modifiers:{damage:1.2,range:1.1}},4:{description:"Multi-directional reflection",abilities:["omni_reflection"],modifiers:{damage:1.3}},5:{description:"Perfect Mirror of Truth",abilities:["perfect_reflection","truth_revelation"],modifiers:{damage:2.2,range:1.3}}},anonymity:{2:{description:"Stealth field projection",abilities:["stealth_field"],modifiers:{range:1.2}},3:{description:"Misdirection protocols",abilities:["misdirection"],modifiers:{range:1.1}},4:{description:"Advanced cloaking technology",abilities:["advanced_cloak"],modifiers:{range:1.4}},5:{description:"Shroud of Perfect Anonymity",abilities:["perfect_anonymity","invisibility_cloak"],modifiers:{range:1.8}}},distributor:{2:{description:"Boost aura for nearby defenses",abilities:["boost_aura"],modifiers:{range:1.3}},3:{description:"Resource generation capabilities",abilities:["resource_generation"]},4:{description:"Enhanced distribution network",abilities:["network_boost"],modifiers:{range:1.5}},5:{description:"Dharma Distribution Center",abilities:["mass_boost","dharma_fountain"],modifiers:{range:2}}}},BOSS_PHASES:{raidTeam:{1:{description:"Initial assault phase",healthThreshold:1,abilities:["emp_burst"],cooldowns:{emp_burst:8e3}},2:{description:"Tactical advancement",healthThreshold:.7,speedMultiplier:1.2,abilities:["emp_burst","shield_regen"],cooldowns:{emp_burst:6e3,shield_regen:1e4}},3:{description:"Desperate measures",healthThreshold:.3,speedMultiplier:1.3,spawnMinions:{type:"scriptKiddie",count:3},abilities:["emp_burst","shield_regen","teleport"],cooldowns:{emp_burst:4e3,shield_regen:8e3,teleport:12e3}}},megaCorp:{1:{description:"Corporate infiltration",healthThreshold:1,abilities:["data_corruption"],cooldowns:{data_corruption:1e4}},2:{description:"Hostile takeover",healthThreshold:.75,speedMultiplier:1.1,abilities:["data_corruption","corporate_takeover"],cooldowns:{data_corruption:8e3,corporate_takeover:12e3}},3:{description:"Market domination",healthThreshold:.5,speedMultiplier:1.1,abilities:["data_corruption","corporate_takeover","mass_deployment"],cooldowns:{data_corruption:6e3,corporate_takeover:1e4,mass_deployment:15e3}},4:{description:"System monopoly",healthThreshold:.25,speedMultiplier:1.2,abilities:["system_crash","mass_deployment"],cooldowns:{system_crash:2e4,mass_deployment:1e4}}}},PATH_GENERATION:{complexity:{low:.3,medium:.6,high:.9},obstacleTypes:{urban:["building","intersection","roadblock"],forest:["tree","rock","stream"],mountain:["cliff","boulder","crevice"],cyber:["firewall","node","data_stream"]},pathWidths:{narrow:30,normal:40,wide:50},validation:{minPathLength:300,maxPathLength:1e3,maxTurnAngle:Math.PI*.8,minSegmentLength:40}},LEVEL_PATHS:{level_1:{pathMode:"static",theme:"cyber",allowGeneration:!1,preserveLayout:!0,staticPath:[{x:50,y:300},{x:200,y:300},{x:350,y:300},{x:500,y:300},{x:650,y:300},{x:800,y:300},{x:950,y:300},{x:1150,y:300}],constraints:{maxTurnAngle:0,minSegmentLength:100,maxComplexity:.1},balanceSettings:{targetDifficulty:.2,allowVariations:!1,maxPathVariations:0},designNotes:"Tutorial level - straight path for learning basics"},level_2:{pathMode:"static",theme:"cyber",allowGeneration:!1,preserveLayout:!0,staticPath:[{x:50,y:400},{x:200,y:400},{x:200,y:200},{x:400,y:200},{x:400,y:400},{x:600,y:400},{x:800,y:400},{x:1150,y:400}],constraints:{maxTurnAngle:Math.PI/2,minSegmentLength:150,maxComplexity:.3},balanceSettings:{targetDifficulty:.3,allowVariations:!1,maxPathVariations:0},designNotes:"Basic turns introduction"},level_3:{pathMode:"hybrid",theme:"cyber",allowGeneration:!0,preserveLayout:!1,constraints:{maxTurnAngle:Math.PI*.6,minSegmentLength:80,maxComplexity:.4},balanceSettings:{targetDifficulty:.38,allowVariations:!0,maxPathVariations:2},designNotes:"First level with path variations"},level_4:{pathMode:"hybrid",theme:"cyber",allowGeneration:!0,preserveLayout:!1,constraints:{maxTurnAngle:Math.PI*.7,minSegmentLength:70,maxComplexity:.5},balanceSettings:{targetDifficulty:.46,allowVariations:!0,maxPathVariations:3}},level_5:{pathMode:"hybrid",theme:"urban",allowGeneration:!0,preserveLayout:!1,constraints:{maxTurnAngle:Math.PI*.75,minSegmentLength:60,maxComplexity:.6},balanceSettings:{targetDifficulty:.54,allowVariations:!0,maxPathVariations:3},designNotes:"Introduction to urban theme"},level_6:{pathMode:"dynamic",theme:"urban",allowGeneration:!0,preserveLayout:!1,constraints:{maxTurnAngle:Math.PI*.8,minSegmentLength:50,maxComplexity:.65},balanceSettings:{targetDifficulty:.62,allowVariations:!0,maxPathVariations:4}},level_7:{pathMode:"dynamic",theme:"forest",allowGeneration:!0,preserveLayout:!1,constraints:{maxTurnAngle:Math.PI*.85,minSegmentLength:45,maxComplexity:.7},balanceSettings:{targetDifficulty:.7,allowVariations:!0,maxPathVariations:4},designNotes:"Forest theme with organic paths"},level_10:{pathMode:"static",theme:"cyber",allowGeneration:!1,preserveLayout:!0,staticPath:[{x:50,y:300},{x:180,y:250},{x:320,y:200},{x:450,y:300},{x:580,y:400},{x:720,y:350},{x:860,y:250},{x:1e3,y:300},{x:1150,y:300}],constraints:{maxTurnAngle:Math.PI*.6,minSegmentLength:80,maxComplexity:.6},balanceSettings:{targetDifficulty:.78,allowVariations:!1,maxPathVariations:0},designNotes:"Boss level - carefully designed path for specific challenge"},level_15:{pathMode:"dynamic",theme:"mountain",allowGeneration:!0,preserveLayout:!1,constraints:{maxTurnAngle:Math.PI*.9,minSegmentLength:40,maxComplexity:.85},balanceSettings:{targetDifficulty:.86,allowVariations:!0,maxPathVariations:5},specialFeatures:["elevation_changes","narrow_passages"]},level_20:{pathMode:"dynamic",theme:"cyber",allowGeneration:!0,preserveLayout:!1,constraints:{maxTurnAngle:Math.PI*.95,minSegmentLength:35,maxComplexity:.95},balanceSettings:{targetDifficulty:.94,allowVariations:!0,maxPathVariations:6},specialFeatures:["portal_networks","reality_distortion"],designNotes:"Ultimate challenge level"},default:{pathMode:"hybrid",theme:"cyber",allowGeneration:!0,preserveLayout:!1,constraints:{maxTurnAngle:Math.PI*.7,minSegmentLength:60,maxComplexity:.6},balanceSettings:{targetDifficulty:.5,allowVariations:!0,maxPathVariations:3}}},ACHIEVEMENT_CATEGORIES:{first_steps:{name:"First Steps",color:"#4ecdc4",icon:"🚶‍♂️"},combat:{name:"Combat Mastery",color:"#ff6b6b",icon:"⚔️"},strategy:{name:"Strategic Genius",color:"#ffd700",icon:"🧠"},progression:{name:"Progression",color:"#45b7d1",icon:"📈"},secret:{name:"Hidden Secrets",color:"#a55eea",icon:"🔮"}},BOSS_WARNINGS:{telegraphDuration:2e3,warningOpacity:.3,warningColor:"#ff0000",soundEffects:{warning:"bossWarning",phaseTransition:"bossPhaseTransition",defeated:"bossDefeated"}},UPGRADE_EFFECTS:{particleCount:{base:20,perLevel:5},colors:{level1:"#4ecdc4",level2:"#45b7d1",level3:"#ffd700",level4:"#ff9ff3",level5:"#fd79a8"},duration:{particles:1500,text:2e3,glow:3e3}},PERFORMANCE:{pathfinding:{updateInterval:200,maxIterations:1e3,cacheSize:100},particles:{maxCount:500,cullDistance:1e3},achievements:{maxNotificationQueue:5,notificationDuration:4e3}}},C={performance:window.performance||{now:()=>Date.now()},math:{distance(s,e,t,i){const o=t-s,r=i-e;return Math.hypot(o,r)}},dom:{}};window.CONFIG=E;window.Utils=C;window.addEventListener("DOMContentLoaded",()=>{new _().init()});export{C as U,y as _};
